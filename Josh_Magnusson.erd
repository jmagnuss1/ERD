```erdiagram
erdiagram UniversityModel

notation=crowsfoot


entity Student {
    student_id: INTEGER key
    name: VARCHAR(100)
    email: VARCHAR(100)
    department_id: VARCHAR(10)
    year: INTEGER
}


entity Course {
    course_id: VARCHAR(10) key
    title: VARCHAR(200)
    credits: INTEGER
    department_id: VARCHAR(10)
    instructor_id: INTEGER
}

entity Instructor {
    instructor_id: INTEGER key
    name: VARCHAR(100)
    email: VARCHAR(100)
    department_id: VARCHAR(10)
}

entity Department {
    department_id: VARCHAR(10) key
    name: VARCHAR(100)
    location: VARCHAR(100)
}

entity Enrollment {
    enrollment_id: INTEGER key
    student_id: INTEGER
    course_id: VARCHAR(10)
    grade: VARCHAR(2)
        semester: VARCHAR(20)
}

relationship StudentEnrollment {
    Student[1 | "student"] -> Enrollment[0..N | "enrollment"]
}


relationship CourseEnrollment {
    Course[1 | "course"] -> Enrollment[0..N | "enrollment"]
}



relationship CourseInstructor {
    Course[0..N | "course"] -> Instructor[1 | "instructor"]
}

relationship CourseDepartment {
    Course[0..N | "course"] -> Department[1 | "department"]
}

relationship InstructorDepartment {
    Instructor[0..N | "instructor"] -> Department[1 | "department"]
}

/* Additional business-rule relationships and notes
   - Students belong to exactly one Department (their major). Modeled via Department -> Student (1 to 0..N).
   - Enrollment links Students and Courses (many-to-many). Each Enrollment record belongs to one Student and one Course.
   - Consider enforcing uniqueness on Enrollment: (student_id, course_id, semester) to prevent duplicate enrollments in the same offering.
   - Emails for Student and Instructor should be unique. Many ERD text formats support comments only; enforce in DB migration.
*/

relationship DepartmentStudent {
    Department[1 | "department"] -> Student[0..N | "student"]
}


```
